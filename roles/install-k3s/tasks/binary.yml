---
- name: Detect latest kubernetes version, unless specified by the user
  ansible.builtin.uri:
    url: "{{ k3s_installation_url }}/{{ k3s_installation_channel }}"
  delegate_to: localhost
  become: false
  changed_when: false
  check_mode: false
  register: get_k3s_version
  when:
    - k3s_version is undefined

- name: Set fact for k3s_version, if unset
  ansible.builtin.set_fact:
    k3s_version: "{{ get_k3s_version.url | basename }}"
  when:
    - k3s_version is undefined

- name: Download k3s binary
  ansible.builtin.get_url:
    url: "https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/{{ k3s_binary_download_name }}"
    dest: "{{ path_to_install_to }}/k3s"
    checksum: "sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/{{ k3s_sha256sum_download_name }}"
    owner: root
    group: root
    mode: 0755
  register: download_binary
  notify:
    - Restart the k3s service

- name: Set fact to ignore errors in check mode, if binary would be downloaded
  ansible.builtin.set_fact:
    ignore_errors_when_binary_downloaded: true
  changed_when: false
  when:
    - download_binary.changed | bool
    - ansible_check_mode | bool

- name: Create necessary links to binary
  ansible.builtin.file:
    src: k3s
    dest: "{{ path_to_install_to }}/{{ item }}"
    state: link
    owner: root
    group: root
  loop:
    - ctr
    - crictl
    - kubectl
  ignore_errors: "{{ ignore_errors_when_binary_downloaded }}"
