---
- name: Set open files limit in sysctl.conf
  become: true
  ansible.posix.sysctl:
    name: fs.file-max
    value: 65536
    state: present

- name: Set session idle timeout
  block:
    # Для Debian/Ubuntu используется /etc/bash.bashrc вместо /etc/bashrc
    - name: Check if bashrc exists
      ansible.builtin.stat:
        path: "{{ item }}"
      loop:
        - /etc/bashrc
        - /etc/bash.bashrc
      register: bashrc_files

    - name: Set TMOUT in bashrc
      become: true
      ansible.builtin.lineinfile:
        dest: "{{ item.item }}"
        regexp: "^TMOUT="
        line: "TMOUT=900"
        state: present
      loop: "{{ bashrc_files.results }}"
      when: item.stat.exists

    - name: Check if tmout.sh exists
      ansible.builtin.stat:
        path: "{{ item }}"
      loop:
        - "/etc/profile"
        - "/etc/profile.d/tmout.sh" # Альтернативный вариант
      register: profile_files

    - name: Set TMOUT in profile files
      become: true
      ansible.builtin.lineinfile:
        dest: "{{ item.item }}"
        regexp: "^TMOUT="
        line: "TMOUT=900"
        state: present
      loop: "{{ profile_files.results }}"
      when: item.stat.exists
  tags: ['timeout']

#TODO Для Debian/Ubuntu требуется установка libpam-pwquality
- name: Set min password length in /etc/security/pwquality.conf
  become: true
  ansible.builtin.lineinfile:
    dest: '/etc/security/pwquality.conf'
    regexp: "minlen"
    line: "minlen = 16"
    state: present
  when: ansible_distribution not in ['Debian', 'Ubuntu']

- name: SSHD | policy settings tune
  block:
    - name: Ensure system crypto policy disabled for ssh
      become: true
      ansible.builtin.lineinfile:
        dest: '/etc/sysconfig/sshd'
        regexp: "^CRYPTO_POLICY="
        line: "CRYPTO_POLICY="
        insertafter: "# CRYPTO_POLICY="
        state: present

    - name: Set ssh Ciphers
      become: true
      ansible.builtin.lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "^Ciphers"
        line: "Ciphers aes256-ctr,aes192-ctr,aes128-ctr"
        state: present
        validate: sshd -t -f %s
      notify: restart-sshd

    - name: Set ssh MACs
      become: true
      ansible.builtin.lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "^MACs"
        line: "MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,\
               hmac-sha2-512,hmac-sha2-256"
        state: present
        validate: sshd -t -f %s
      notify: restart-sshd

    - name: Set ssh key exchanges
      become: true
      ansible.builtin.lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "^KexAlgorithms"
        line: "KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,\
               diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,\
               diffie-hellman-group-exchange-sha256"
        state: present
        validate: sshd -t -f %s
      notify: restart-sshd

    - name: Set ssh HostKeyAlgorithms
      become: true
      ansible.builtin.lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "^HostKeyAlgorithms"
        line: "HostKeyAlgorithms ssh-ed25519,ssh-rsa"
        state: present
        validate: sshd -t -f %s
      notify: restart-sshd
  tags: ['sshd']

- name: USERS | password settings tune
  when:
    - allow_user_passwords
    - ansible_distribution not in ['Debian', 'Ubuntu']
  block:
    - name: Get all users
      become: true
      ansible.builtin.getent:
        database: passwd

    - name: Convert users dict to list
      ansible.builtin.set_fact:
        all_users: "{{ getent_passwd.keys() | list }}"

    - name: Change min password expiration days for all users
      become: true
      ansible.builtin.user:
        name: "{{ item }}"
        password_expire_min: 7
      with_items: "{{ all_users }}"

    #TODO Для Debian/Ubuntu требуется установка libpam-pwquality
    - name: Password complexity gecoscheck
      become: true
      ansible.builtin.lineinfile:
        dest: '/etc/security/pwquality.conf'
        regexp: "gecoscheck"
        line: "gecoscheck = 1"
        state: present

    #TODO Для Debian/Ubuntu требуется установка libpam-pwquality
    - name: Password complexity usercheck
      become: true
      ansible.builtin.lineinfile:
        dest: '/etc/security/pwquality.conf'
        regexp: "usercheck"
        line: "usercheck = 1"
        state: present

    - name: Be sure password remember is set
      become: true
      community.general.pamd:
        name: system-auth
        type: password
        control: sufficient
        module_path: pam_unix.so
        module_arguments:
          - remember=10
        state: args_present
  tags: ['users']
